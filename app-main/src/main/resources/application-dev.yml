server:
  port: 8080
  forward-headers-strategy: framework
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      enabled: true
      force: true
cors:
  allowed-origins: http://localhost:3000,http://127.0.0.1,http://172.30.1.88

spring:
  security:
    oauth2:
      client:
        registration:
          # registrationId로, URL 경로에 사용
          naver:
            # 1. 네이버 개발자 센터에서 발급받은 내 Client ID
            client-id: TfXaKERElirAiGjUJzN2
            # 2. 네이버 개발자 센터에서 발급받은 내 Client Secret
            client-secret: y63ZBdhSHf
            # 3. 로그인 성공 후 코드를 돌려받을 리다이렉트 URI
            # {baseUrl}은 현재 서버 주소(http://localhost:8080/api)로 자동 치환됩니다.
            # 이 주소는 네이버 개발자 콘솔에 등록한 Callback URL과 정확히 일치해야 합니다.
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            # 4. 인증 방식: '인가 코드'를 사용하는 표준 방식
            authorization-grant-type: authorization_code
            # 5. 네이버에 요청할 사용자 정보 범위
            scope:
              - name
              - email
              - mobile
            # 6. 소셜 로그인 식별용 이름
            client-name: Naver
        # 소셜 로그인 제공자별 상세 설정
        provider:
          naver:
            # 7. 네이버 로그인 페이지 URL
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            # 8. 액세스 토큰 발급 URL
            token-uri: https://nid.naver.com/oauth2.0/token
            # 9. 사용자 정보 조회 URL
            user-info-uri: https://openapi.naver.com/v1/nid/me
            # 10. 응답에서 사용자 이름(고유 식별자)을 찾을 때 사용할 키
            user-name-attribute: response

  datasource:
    # 기본 연결 정보
    url: jdbc:postgresql://localhost:5432/lightning_bid
    username: lightning_bid_app_user
    password: 12341234
    driver-class-name: org.postgresql.Driver
    # 커넥션 풀 상세 설정
    hikari:
      maximum-pool-size: 10
      connection-timeout: 10000

  jpa:
    hibernate:
      # create, create-drop, update, validate, none
      ddl-auto: update
    properties:
      hibernate:
        default_schema: app
        # 콘솔에 출력되는 SQL을 보기 좋게 포맷팅
        format_sql: true
        # Entity 필드(카멜케이스) -> DB 컬럼(스네이크케이스)로 자동 변환
        # 예: postTitle -> post_title
        physical_naming_strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        jdbc:
          batch_size: 20
    # 실행되는 SQL 쿼리를 콘솔에 보여줌
    show-sql: true
    open-in-view: false

jwt:
  secret: "and0LXNlY3JldC0xMjMtMTIzLTMyMS0zMjEtand0LXNlY3JldA=="
  # 1시간
#  access-token-expiration-millis: 3600000
  access-token-expiration-millis: 1209600000

  # 14일
#  refresh-token-expiration-millis: 1209600000
  refresh-token-expiration-millis: 60000


file:
  image:
    upload-dir: /Users/choijihwan/lightning-bid/